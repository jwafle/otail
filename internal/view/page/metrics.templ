package page

import (
	"github.com/jwafle/otail/internal/view/layout"
	"github.com/jwafle/otail/internal/view/message"
)

templ Metrics() {
	@layout.Base() {
		<div class="container mx-auto p-4">
			<div class="flex justify-between items-center mb-4">
				<h1 class="text-2xl font-bold">Metrics</h1>
				<div class="badge badge-primary">Live Updates</div>
			</div>
			<div class="mb-4">
				<div class="stats shadow w-full">
					<div class="stat">
						<div class="stat-title">CPU Usage</div>
						<div class="stat-value" id="cpu-usage">--</div>
						<div class="stat-desc">Last minute average</div>
					</div>
					<div class="stat">
						<div class="stat-title">Memory</div>
						<div class="stat-value" id="memory-usage">--</div>
						<div class="stat-desc">Available/Total</div>
					</div>
					<div class="stat">
						<div class="stat-title">Requests</div>
						<div class="stat-value" id="request-count">--</div>
						<div class="stat-desc">Per minute</div>
					</div>
				</div>
			</div>
			<div class="card bg-base-100 shadow-xl mb-4">
				<div class="card-body">
					<h2 class="card-title">Live Metrics</h2>
					<p>Real-time telemetry data from your system</p>
					<div
						id="metrics-container"
						class="border rounded-lg bg-base-200 min-h-[300px] overflow-y-auto max-h-[500px]"
						hx-sse="connect:/metrics/sse"
					>
						<div class="flex items-center justify-center h-[300px]">
							<span class="loading loading-spinner loading-lg"></span>
							<p class="ml-2">Waiting for metrics...</p>
						</div>
						<div hx-sse-swap="message"></div>
					</div>
				</div>
			</div>
		</div>
		<script>
			document.addEventListener('htmx:sseMessage', function(evt) {
				try {
					const jsonContent = evt.detail.text;
					const metricsDiv = document.getElementById('metrics-container');
					const jsonObj = JSON.parse(jsonContent.querySelector('pre').textContent);

					// Update summary stats if available
					if (jsonObj.name === 'cpu_usage') {
						document.getElementById('cpu-usage').textContent = jsonObj.value + '%';
					} else if (jsonObj.name === 'memory_usage') {
						document.getElementById('memory-usage').textContent = jsonObj.value + ' ' + jsonObj.unit;
					} else if (jsonObj.name === 'request_count') {
						document.getElementById('request-count').textContent = jsonObj.value;
					}
				} catch (e) {
					console.error('Error parsing metric data:', e);
				}
			});
		</script>
	}
}

templ MetricMessage(id string, json string) {
	<div
		hx-swap-oob="afterbegin:#metrics-container"
		class="border-b border-base-300 hover:bg-base-300"
	>
		@message.Message(id, json)
	</div>
}
